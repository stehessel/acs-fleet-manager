openapi: 3.0.0
info:
  description: Red Hat Advanced Cluster Security (RHACS) Service Fleet Manager is
    a Rest API to manage instances of ACS components.
  title: Red Hat Advanced Cluster Security Service Fleet Manager
  version: 1.2.0
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: localhost
  url: http://localhost:8000
- description: current domain
  url: /
paths:
  /api/rhacs/v1:
    get:
      operationId: getVersionMetadata
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionMetadata'
          description: Version metadata
      summary: Returns the version metadata
  /api/rhacs/v1/errors/{id}:
    get:
      operationId: getErrorById
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Get error by Id
      summary: Returns the error by id
      tags:
      - errors
  /api/rhacs/v1/errors:
    get:
      operationId: getErrors
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorList'
          description: List of possible errors
      summary: Returns the list of possible API errors
      tags:
      - errors
  /api/rhacs/v1/status:
    get:
      operationId: getServiceStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceStatus'
          description: Ok
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns the status of resources, such as whether maximum service capacity
        has been reached
  /api/rhacs/v1/centrals/{id}:
    delete:
      description: |
        The only users authorized for this operation are:
        1) The administrator of the owner organisation of the specified Central.
        2) The owner user, and only if it is also part of the owner organisation of the specified Central.
      operationId: deleteCentralById
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Perform the action in an asynchronous manner
        explode: true
        in: query
        name: async
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "202":
          description: Deleted
        "400":
          content:
            application/json:
              examples:
                "400DeletionExample":
                  $ref: '#/components/examples/400DeletionExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation errors occurred
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "404":
          content:
            application/json:
              examples:
                "404DeleteExample":
                  $ref: '#/components/examples/404DeleteExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central request with specified ID exists
        "500":
          content:
            application/json:
              examples:
                "500DeleteExample":
                  $ref: '#/components/examples/500DeleteExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Deletes a Central request by ID
    get:
      description: This operation is only authorized to users in the same organisation
        as the owner organisation of the specified Central.
      operationId: getCentralById
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                CentralRequestGetResponseExample:
                  $ref: '#/components/examples/CentralRequestExample'
                CentralRequestGetResponseWithFailedCreationStatusExample:
                  $ref: '#/components/examples/CentralRequestFailedCreationStatusExample'
              schema:
                $ref: '#/components/schemas/CentralRequest'
          description: Central request found by ID
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: No Central request with specified ID exists
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a Central request by ID
  /api/rhacs/v1/centrals:
    get:
      description: Only returns those centrals that are owned by the organisation
        of the user authenticated for the request.
      operationId: getCentrals
      parameters:
      - description: Page index
        examples:
          page:
            value: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        explode: true
        in: query
        name: size
        required: false
        schema:
          type: string
        style: form
      - description: |-
          Specifies the order by criteria. The syntax of this parameter is
          similar to the syntax of the `order by` clause of an SQL statement.
          Each query can be ordered by any of the following `centralRequests` fields:

          * centralUIURL
          * centralDataURL
          * cloud_provider
          * cluster_id
          * created_at
          * href
          * id
          * instance_type
          * multi_az
          * name
          * organisation_id
          * owner
          * region
          * status
          * updated_at
          * version

          For example, to return all Central instances ordered by their name, use the following syntax:

          ```sql
          name asc
          ```

          To return all Central instances ordered by their name _and_ created date, use the following syntax:

          ```sql
          name asc, created_at asc
          ```

          If the parameter isn't provided, or if the value is empty, then
          the results are ordered by name.
        examples:
          orderBy:
            value: name asc
        explode: true
        in: query
        name: orderBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Search criteria.

          The syntax of this parameter is similar to the syntax of the `where` clause of an
          SQL statement. Allowed fields in the search are `cloud_provider`, `name`, `owner`, `region`, and `status`. Allowed comparators are `<>`, `=`, or `LIKE`.
          Allowed joins are `AND` and `OR`. However, you can use a maximum of 10 joins in a search query.

          Examples:

          To return a Central instance with the name `my-central` and the region `aws`, use the following syntax:

          ```
          name = my-central and cloud_provider = aws
          ```[p-]

          To return a Central instance with a name that starts with `my`, use the following syntax:

          ```
          name like my%25
          ```

          If the parameter isn't provided, or if the value is empty, then all the Central instances
          that the user has permission to see are returned.

          Note. If the query is invalid, an error is returned.
        examples:
          search:
            value: name = my-central and cloud_provider = aws
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                CentralRequestListExample:
                  $ref: '#/components/examples/CentralRequestListExample'
              schema:
                $ref: '#/components/schemas/CentralRequestList'
          description: A list of Central requests
        "400":
          content:
            application/json:
              examples:
                InvalidQueryExample:
                  $ref: '#/components/examples/400InvalidQueryExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: User not authorized to access the service
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns a list of Central requests
    post:
      description: Each central has a single owner organisation and a single owner
        user. Creates a new Central that is owned by the user and organisation authenticated
        for the request.
      operationId: createCentral
      parameters:
      - description: Perform the action in an asynchronous manner
        explode: true
        in: query
        name: async
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            examples:
              USRegion:
                $ref: '#/components/examples/USRegionExample'
              EURegion:
                $ref: '#/components/examples/EURegionExample'
            schema:
              $ref: '#/components/schemas/CentralRequestPayload'
        description: Central data
        required: true
      responses:
        "202":
          content:
            application/json:
              examples:
                CentralRequestPostResponseExample:
                  $ref: '#/components/examples/CentralRequestExample'
              schema:
                $ref: '#/components/schemas/CentralRequest'
          description: Accepted
        "400":
          content:
            application/json:
              examples:
                "400CreationExample":
                  $ref: '#/components/examples/400CreationExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Validation errors occurred
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "403":
          content:
            application/json:
              examples:
                "403Example":
                  $ref: '#/components/examples/403Example'
                "403MaxAllowedInstanceReachedExample":
                  $ref: '#/components/examples/403MaxAllowedInstanceReachedExample'
                "403TermsNotAcceptedExample":
                  $ref: '#/components/examples/403TermsNotAcceptedExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: User forbidden either because the user is not authorized to
            access the service or because the maximum number of instances that can
            be created by this user has been reached.
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: The requested resource doesn't exist
        "409":
          content:
            application/json:
              examples:
                "409NameConflictExample":
                  $ref: '#/components/examples/409NameConflictExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: A conflict has been detected in the creation of this resource
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: An unexpected error occurred while creating the Central request
      security:
      - Bearer: []
      summary: Creates a Central request
  /api/rhacs/v1/cloud_providers:
    get:
      operationId: getCloudProviders
      parameters:
      - description: Page index
        examples:
          page:
            value: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        explode: true
        in: query
        name: size
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudProviderList'
          description: Returned list of supported cloud providers
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns the list of supported cloud providers
  /api/rhacs/v1/cloud_providers/{id}/regions:
    get:
      operationId: getCloudProviderRegions
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Page index
        examples:
          page:
            value: "1"
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: string
        style: form
      - description: Number of items in each page
        examples:
          size:
            value: "100"
        explode: true
        in: query
        name: size
        required: false
        schema:
          type: string
        style: form
      - description: The Central instance type to filter the results by
        examples:
          eval_instance_type:
            value: eval
          standard_instance_type:
            value: standard
        explode: true
        in: query
        name: instance_type
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudRegionList'
          description: Returned list of supported cloud provider regions
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns the list of supported regions of the supported cloud provider
  /api/rhacs/v1/cloud_accounts:
    get:
      operationId: getCloudAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudAccountsList'
          description: Returned list of supported cloud provider regions
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns the list of cloud accounts which belong to user's organization
  /api/rhacs/v1/centrals/{id}/metrics/query_range:
    get:
      operationId: getMetricsByRangeQuery
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The length of time in minutes for which to return the metrics
        examples:
          duration:
            value: 5
        explode: true
        in: query
        name: duration
        required: true
        schema:
          default: 5
          format: int64
          maximum: 4320
          minimum: 1
          type: integer
        style: form
      - description: The interval in seconds between data points
        examples:
          interval:
            value: 30
        explode: true
        in: query
        name: interval
        required: true
        schema:
          default: 30
          format: int64
          maximum: 10800
          minimum: 1
          type: integer
        style: form
      - description: List of metrics to fetch. Fetch all metrics when empty. List
          entries are Central internal metric names.
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: []
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsRangeQueryList'
          description: Returned JSON array of Prometheus metrics objects from observatorium
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns metrics with timeseries range query by Central ID
  /api/rhacs/v1/centrals/{id}/metrics/query:
    get:
      operationId: getMetricsByInstantQuery
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: List of metrics to fetch. Fetch all metrics when empty. List
          entries are Central internal metric names.
        explode: true
        in: query
        name: filters
        required: false
        schema:
          default: []
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsInstantQueryList'
          description: Returned JSON array of Prometheus metrics objects from observatorium
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns metrics with instant query by Central ID
  /api/rhacs/v1/centrals/{id}/metrics/federate:
    get:
      operationId: federateMetrics
      parameters:
      - description: The ID of record
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Returned Central metrics in a Prometheus text format
        "400":
          content:
            application/json:
              examples:
                MissingParameterExample:
                  $ref: '#/components/examples/400MissingParameterExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "401":
          content:
            application/json:
              examples:
                "401Example":
                  $ref: '#/components/examples/401Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is invalid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Central ID not found
        "500":
          content:
            application/json:
              examples:
                "500Example":
                  $ref: '#/components/examples/500Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error occurred
      security:
      - Bearer: []
      summary: Returns all metrics in scrapeable format for a given Central ID
components:
  examples:
    USRegionExample:
      value:
        region: us-east-1
        cloud_provider: aws
        name: serviceapitest
    EURegionExample:
      value:
        region: eu-west-1
        cloud_provider: aws
        name: serviceapitest
    CentralRequestExample:
      value:
        id: a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
        kind: central
        href: /api/rhacs/v1/centrals/a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
        status: ready
        cloud_provider: aws
        multi_az: true
        region: us-east-1
        owner: api_central_service
        name: serviceapi
        centralUIURL: https://rhacs-a3a9c5b9-0283-4ff8-9b9e-da2209da17c3.example.rhacs.com
        centralDataURL: https://rhacs-data-a3a9c5b9-0283-4ff8-9b9e-da2209da17c3.example.rhacs.com
        created_at: 2020-10-05T12:51:24.053142Z
        updated_at: 2020-10-05T12:56:36.362208Z
        version: 2.6.0
        instance_type: standard
    CentralRequestFailedCreationStatusExample:
      value:
        id: a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
        kind: central
        href: /api/rhacs/v1/centrals/a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
        status: failed
        cloud_provider: aws
        multi_az: true
        region: us-east-1
        owner: api_central_service
        name: serviceapi
        centralUIURL: https://rhacs-a3a9c5b9-0283-4ff8-9b9e-da2209da17c3.example.rhacs.com
        centralDataURL: https://rhacs-data-a3a9c5b9-0283-4ff8-9b9e-da2209da17c3.example.rhacs.com
        created_at: 2020-10-05T12:51:24.053142Z
        updated_at: 2020-10-05T12:56:36.362208Z
        failed_reason: a reason the Central request creation failed
        instance_type: standard
    CentralRequestListExample:
      value:
        kind: CentralRequestList
        size: "1"
        page: "1"
        total: "1"
        items:
        - id: a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
          kind: central
          href: /api/rhacs/v1/centrals/a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
          status: ready
          cloud_provider: aws
          multi_az: true
          region: us-east-1
          owner: alice
          name: serviceapi
          centralUIURL: https://rhacs-a3a9c5b9-0283-4ff8-9b9e-da2209da17c3.example.rhacs.com
          centralDataURL: https://rhacs-data-a3a9c5b9-0283-4ff8-9b9e-da2209da17c3.example.rhacs.com
          created_at: 2020-10-05T12:51:24.053142Z
          updated_at: 2020-10-05T12:56:36.362208Z
          version: 2.6.0
          instance_type: standard
    CloudProviderExample:
      value:
        kind: CloudProvider
        id: aws
        name: aws
        display_name: Amazon Web Services
        enabled: true
    CloudRegionExample:
      value:
        kind: CloudRegion
        id: us-east-1
        display_name: US East, N. Virginia
        enabled: true
        supported_instance_types:
        - standard
        - eval
    MetricsRangeQueryExample:
      value:
        metric:
          __name__: central_server_brokertopicmetrics_bytes_in_total
          central_operator_io_cluster: central-service
          topic: __consumer_offsets
        values:
        - timestamp: 1611670230000
          value: 84154
        - timestamp: 1611670260000
          value: 85888
        - timestamp: 1611670290000
          value: 87622
    MetricsInstantQueryExample:
      value:
        metric:
          __name__: central_server_brokertopicmetrics_bytes_in_total
          central_operator_io_cluster: central-service
          topic: __consumer_offsets
        timestamp: 1611670230000
        value: 84154
    CloudAccountsList:
      value:
        cloudAccounts:
        - cloudAccountId: cloudAccountId
          cloudProviderId: cloudProviderId
    "400DeletionExample":
      value:
        id: "103"
        kind: Error
        href: /api/rhacs/v1/errors/103
        code: RHACS-MGMT-103
        reason: Synchronous action is not supported, use async=true parameter
        operation_id: 1iWIimqGcrDuL61aUxIZqBTqNRa
    "400CreationExample":
      value:
        id: "103"
        kind: Error
        href: /api/rhacs/v1/errors/103
        code: RHACS-MGMT-103
        reason: Synchronous action is not supported, use async=true parameter
        operation_id: 1iWIimqGcrDuL61aUxIZqBTqNRa
    "400InvalidQueryExample":
      value:
        id: "23"
        kind: Error
        href: /api/rhacs/v1/errors/23
        code: RHACS-MGMT-23
        reason: 'Failed to parse search query: Unable to list Central requests for
          api_central_service: RHACS-MGMT-23: Failed to parse search query: Unsupported
          column name for search: ''id''. Supported column names are: region, name,
          cloud_provider, name, status. Query invalid: id = 123'
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "400MissingParameterExample":
      value:
        id: "21"
        kind: Error
        href: /api/rhacs/v1/errors/21
        code: RHACS-MGMT-21
        reason: 'missing path parameter: central id'
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "404Example":
      value:
        id: "7"
        kind: Error
        href: /api/rhacs/v1/errors/7
        code: RHACS-MGMT-7
        reason: The requested resource doesn't exist
    "404DeleteExample":
      value:
        id: "7"
        kind: Error
        href: /api/rhacs/v1/errors/7
        code: RHACS-MGMT-7
        reason: CentralResource with id='1iK3duVYIvv5YvLlyz1mGR3JyqN' not found
        operation_id: 1iYO7g2g6HTdUKUa2ksH82kQD3y
    "401Example":
      value:
        id: "11"
        kind: Error
        href: /api/rhacs/v1/errors/11
        code: RHACS-MGMT-11
        reason: 'Unable to verify JWT token: Required authorization token not found'
        operation_id: 1iY3UhEhwmXBpWPfI2lNekpd4ZD
    "403Example":
      value:
        id: "4"
        kind: Error
        href: /api/rhacs/v1/errors/4
        code: RHACS-MGMT-4
        reason: User 'foo-bar' is not authorized to access the service.
        operation_id: 1lY3UiEhznXBpWPfI2lNejpd4YC
    "403MaxAllowedInstanceReachedExample":
      value:
        id: "5"
        kind: Error
        href: /api/rhacs/v1/errors/5
        code: RHACS-MGMT-5
        reason: User 'foo-bar' has reached a maximum number of 6 allowed instances.
        operation_id: 1lY3UiEkxnXBpVPeI2oNejd3XB
    "403TermsNotAcceptedExample":
      value:
        id: "12"
        kind: Error
        href: /api/rhacs/v1/errors/12
        code: RHACS-MGMT-12
        reason: Required terms have not been accepted
        operation_id: kXCzWPeI2oXBpVPeI2LvF9jMQY
    "409NameConflictExample":
      value:
        id: "36"
        kind: Error
        href: /api/rhacs/v1/errors/36
        code: RHACS-MGMT-36
        reason: Cental name is already used
        operation_id: 6kY0UiEkzkXCzWPeI2oYehd3ED
    "500Example":
      value:
        id: "9"
        kind: Error
        href: /api/rhacs/v1/errors/9
        code: RHACS-MGMT-9
        reason: Unspecified error
        operation_id: 1ieELvF9jMQY6YghfM9gGRsHvEW
    "500DeleteExample":
      value:
        id: "9"
        kind: Error
        href: /api/rhacs/v1/errors/9
        code: RHACS-MGMT-9
        reason: 'error deleting syncset: OCM-EX-9: failed to delete syncset: ext-serviceapi-1ix03lndlmq0qfc7sita5sljv8e
          for cluster id: 1g5d88q0lrcdv4g7alb7slfgnj3dhbsj%!(EXTRA *errors.Error=identifier
          is ''404'', code is ''CLUSTERS-MGMT-404'' and operation identifier is ''1g5or50viu07oealuehrkc26dgftj1ac'':
          Cluster ''1g5d88q0lrcdv4g7alb7slfgnj3dhbsj'' not found)'
        operation_id: 1iYTsWry6nsqb2sNmFj5bXpD7Ca
  parameters:
    id:
      description: The ID of record
      explode: false
      in: path
      name: id
      required: true
      schema:
        type: string
      style: simple
    duration:
      description: The length of time in minutes for which to return the metrics
      examples:
        duration:
          value: 5
      explode: true
      in: query
      name: duration
      required: true
      schema:
        default: 5
        format: int64
        maximum: 4320
        minimum: 1
        type: integer
      style: form
    interval:
      description: The interval in seconds between data points
      examples:
        interval:
          value: 30
      explode: true
      in: query
      name: interval
      required: true
      schema:
        default: 30
        format: int64
        maximum: 10800
        minimum: 1
        type: integer
      style: form
    filters:
      description: List of metrics to fetch. Fetch all metrics when empty. List entries
        are Central internal metric names.
      explode: true
      in: query
      name: filters
      required: false
      schema:
        default: []
        items:
          type: string
        type: array
      style: form
    page:
      description: Page index
      examples:
        page:
          value: "1"
      explode: true
      in: query
      name: page
      required: false
      schema:
        type: string
      style: form
    size:
      description: Number of items in each page
      examples:
        size:
          value: "100"
      explode: true
      in: query
      name: size
      required: false
      schema:
        type: string
      style: form
    orderBy:
      description: |-
        Specifies the order by criteria. The syntax of this parameter is
        similar to the syntax of the `order by` clause of an SQL statement.
        Each query can be ordered by any of the following `centralRequests` fields:

        * centralUIURL
        * centralDataURL
        * cloud_provider
        * cluster_id
        * created_at
        * href
        * id
        * instance_type
        * multi_az
        * name
        * organisation_id
        * owner
        * region
        * status
        * updated_at
        * version

        For example, to return all Central instances ordered by their name, use the following syntax:

        ```sql
        name asc
        ```

        To return all Central instances ordered by their name _and_ created date, use the following syntax:

        ```sql
        name asc, created_at asc
        ```

        If the parameter isn't provided, or if the value is empty, then
        the results are ordered by name.
      examples:
        orderBy:
          value: name asc
      explode: true
      in: query
      name: orderBy
      required: false
      schema:
        type: string
      style: form
    search:
      description: |
        Search criteria.

        The syntax of this parameter is similar to the syntax of the `where` clause of an
        SQL statement. Allowed fields in the search are `cloud_provider`, `name`, `owner`, `region`, and `status`. Allowed comparators are `<>`, `=`, or `LIKE`.
        Allowed joins are `AND` and `OR`. However, you can use a maximum of 10 joins in a search query.

        Examples:

        To return a Central instance with the name `my-central` and the region `aws`, use the following syntax:

        ```
        name = my-central and cloud_provider = aws
        ```[p-]

        To return a Central instance with a name that starts with `my`, use the following syntax:

        ```
        name like my%25
        ```

        If the parameter isn't provided, or if the value is empty, then all the Central instances
        that the user has permission to see are returned.

        Note. If the query is invalid, an error is returned.
      examples:
        search:
          value: name = my-central and cloud_provider = aws
      explode: true
      in: query
      name: search
      required: false
      schema:
        type: string
      style: form
    instance_type:
      description: The Central instance type to filter the results by
      examples:
        eval_instance_type:
          value: eval
        standard_instance_type:
          value: standard
      explode: true
      in: query
      name: instance_type
      required: false
      schema:
        type: string
      style: form
  schemas:
    ObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      type: object
    List:
      properties:
        kind:
          type: string
        page:
          type: integer
        size:
          type: integer
        total:
          type: integer
      required:
      - items
      - kind
      - page
      - size
      - total
      type: object
    Error:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/Error_allOf'
    ErrorList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/ErrorList_allOf'
    ResourceList:
      additionalProperties:
        type: string
      type: object
    ResourceRequirements:
      example:
        requests:
          key: requests
        limits:
          key: limits
      properties:
        requests:
          additionalProperties:
            type: string
          type: object
        limits:
          additionalProperties:
            type: string
          type: object
      type: object
    CentralRequest:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/CentralRequest_allOf'
    CentralRequestList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/CentralRequestList_allOf'
    CentralSpec:
      example:
        resources:
          requests:
            key: requests
          limits:
            key: limits
      properties:
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
      type: object
    ScannerSpec:
      example:
        analyzer:
          scaling:
            maxReplicas: 1
            autoScaling: autoScaling
            minReplicas: 1
            replicas: 1
          resources:
            requests:
              key: requests
            limits:
              key: limits
        db:
          resources:
            requests:
              key: requests
            limits:
              key: limits
      properties:
        analyzer:
          $ref: '#/components/schemas/ScannerSpec_analyzer'
        db:
          $ref: '#/components/schemas/ScannerSpec_db'
      type: object
    VersionMetadata:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/VersionMetadata_allOf'
    ServiceStatus:
      description: Schema for the service status response body
      example:
        centrals:
          max_capacity_reached: true
      properties:
        centrals:
          $ref: '#/components/schemas/ServiceStatus_centrals'
      type: object
    CentralRequestPayload:
      description: Schema for the request body sent to /centrals POST
      example:
        cloud_account_id: cloud_account_id
        central:
          resources:
            requests:
              key: requests
            limits:
              key: limits
        multi_az: true
        name: name
        scanner:
          analyzer:
            scaling:
              maxReplicas: 1
              autoScaling: autoScaling
              minReplicas: 1
              replicas: 1
            resources:
              requests:
                key: requests
              limits:
                key: limits
          db:
            resources:
              requests:
                key: requests
              limits:
                key: limits
        cloud_provider: cloud_provider
        region: region
      properties:
        cloud_provider:
          description: The cloud provider where the Central component will be created
            in
          type: string
        cloud_account_id:
          description: The cloud account ID that is linked to the ACS instance
          type: string
        multi_az:
          description: Set this to true to configure the Central component to be multiAZ
          type: boolean
        name:
          description: The name of the Central component. It must consist of lower-case
            alphanumeric characters or '-', start with an alphabetic character, and
            end with an alphanumeric character, and can not be longer than 32 characters.
          type: string
        region:
          description: The region where the Central component cluster will be created
            in
          type: string
        central:
          $ref: '#/components/schemas/CentralSpec'
        scanner:
          $ref: '#/components/schemas/ScannerSpec'
      required:
      - name
      type: object
    CloudProviderList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/CloudProviderList_allOf'
    CloudRegionList:
      allOf:
      - $ref: '#/components/schemas/List'
      - $ref: '#/components/schemas/CloudRegionList_allOf'
    CloudProvider:
      description: Cloud provider.
      properties:
        kind:
          description: Indicates the type of this object. Will be 'CloudProvider'
            link.
          type: string
        id:
          description: Unique identifier of the object.
          type: string
        display_name:
          description: Name of the cloud provider for display purposes.
          type: string
        name:
          description: Human friendly identifier of the cloud provider, for example
            `aws`.
          type: string
        enabled:
          description: Whether the cloud provider is enabled for deploying an OSD
            cluster.
          type: boolean
      required:
      - enabled
    CloudRegion:
      description: Description of a region of a cloud provider.
      properties:
        kind:
          description: Indicates the type of this object. Will be 'CloudRegion'.
          type: string
        id:
          description: Unique identifier of the object.
          type: string
        display_name:
          description: Name of the region for display purposes, for example `N. Virginia`.
          type: string
        enabled:
          default: false
          description: Whether the region is enabled for deploying an OSD cluster.
          type: boolean
        supported_instance_types:
          description: The Central component instance types supported by this region.
          items:
            type: string
          type: array
      required:
      - enabled
      - supported_instance_types
    MetricsRangeQueryList:
      allOf:
      - $ref: '#/components/schemas/MetricsRangeQueryList_allOf'
    RangeQuery:
      properties:
        metric:
          additionalProperties:
            type: string
          type: object
        values:
          items:
            $ref: '#/components/schemas/values'
          type: array
      type: object
    values:
      properties:
        timestamp:
          format: int64
          type: integer
        value:
          format: double
          type: number
      required:
      - value
      type: object
    MetricsInstantQueryList:
      allOf:
      - $ref: '#/components/schemas/MetricsInstantQueryList_allOf'
    MetricsFederationResult:
      type: string
    InstantQuery:
      properties:
        metric:
          additionalProperties:
            type: string
          type: object
        timestamp:
          format: int64
          type: integer
        value:
          format: double
          type: number
      required:
      - value
      type: object
    CloudAccountsList:
      example:
        cloudAccounts:
        - ""
        - ""
      properties:
        cloudAccounts:
          items:
            allOf:
            - $ref: '#/components/schemas/CloudAccount'
          type: array
      type: object
    CloudAccount:
      properties:
        cloudAccountId:
          type: string
        cloudProviderId:
          type: string
      type: object
    Error_allOf:
      properties:
        code:
          type: string
        reason:
          type: string
        operation_id:
          type: string
    ErrorList_allOf:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Error'
          type: array
    CentralRequest_allOf:
      example: '{"$ref":"#/components/examples/CentralRequestExample"}'
      properties:
        status:
          description: 'Values: [accepted, preparing, provisioning, ready, failed,
            deprovision, deleting] '
          type: string
        cloud_provider:
          description: Name of Cloud used to deploy. For example AWS
          type: string
        cloud_account_id:
          description: Cloud Account ID
          type: string
        multi_az:
          type: boolean
        region:
          description: 'Values will be regions of specific cloud provider. For example:
            us-east-1 for AWS'
          type: string
        owner:
          type: string
        name:
          type: string
        centralUIURL:
          type: string
        centralDataURL:
          type: string
        created_at:
          format: date-time
          type: string
        updated_at:
          format: date-time
          type: string
        failed_reason:
          type: string
        version:
          type: string
        instance_type:
          type: string
      required:
      - multi_az
    CentralRequestList_allOf:
      example: '{"kind":"CentralRequestList","page":"1","size":"1","total":"1","item":{"$ref":"#/components/examples/CentralRequestExample"}}'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/CentralRequest'
          type: array
    ScannerSpec_analyzer_scaling:
      example:
        maxReplicas: 1
        autoScaling: autoScaling
        minReplicas: 1
        replicas: 1
      properties:
        autoScaling:
          type: string
        replicas:
          format: int32
          minimum: 1
          type: integer
        minReplicas:
          format: int32
          minimum: 1
          type: integer
        maxReplicas:
          format: int32
          minimum: 1
          type: integer
    ScannerSpec_analyzer:
      example:
        scaling:
          maxReplicas: 1
          autoScaling: autoScaling
          minReplicas: 1
          replicas: 1
        resources:
          requests:
            key: requests
          limits:
            key: limits
      properties:
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
        scaling:
          $ref: '#/components/schemas/ScannerSpec_analyzer_scaling'
    ScannerSpec_db:
      example:
        resources:
          requests:
            key: requests
          limits:
            key: limits
      properties:
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
    VersionMetadata_allOf:
      example: '{"kind":"APIVersion","id":"v1","href":"/api/rhacs/v1","collections":[{"id":"centrals","href":"/api/rhacs/v1/centrals","kind":"CentralList"}]}'
      properties:
        collections:
          items:
            allOf:
            - $ref: '#/components/schemas/ObjectReference'
          type: array
    ServiceStatus_centrals:
      description: The RHACS resource api status
      properties:
        max_capacity_reached:
          description: Indicates whether maximum service capacity has been reached
          type: boolean
      required:
      - max_capacity_reached
    CloudProviderList_allOf:
      example: '{"kind":"CloudProviderList","page":"1","size":"1","total":"1","item":{"$ref":"#/components/examples/CloudProviderExample"}}'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/CloudProvider'
          type: array
    CloudRegionList_allOf:
      example: '{"kind":"CloudRegionList","page":"1","size":"1","total":"1","item":{"$ref":"#/components/examples/CloudRegionExample"}}'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/CloudRegion'
          type: array
    MetricsRangeQueryList_allOf:
      example: '{"kind":"MetricsRangeQueryList","id":"1nbpS70HduPe4l0to8jSg2CLzfu","items":{"$ref":"#/components/examples/MetricsRangeQueryExample"}}'
      properties:
        kind:
          type: string
        id:
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/RangeQuery'
          type: array
    MetricsInstantQueryList_allOf:
      example: '{"kind":"MetricsInstantQueryList","id":"1nbpS70HduPe4l0to8jSg2CLzfu","items":{"$ref":"#/components/examples/MetricsInstantQueryExample"}}'
      properties:
        kind:
          type: string
        id:
          type: string
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/InstantQuery'
          type: array
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http
