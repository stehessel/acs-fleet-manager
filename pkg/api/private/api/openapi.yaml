openapi: 3.0.0
info:
  description: Red Hat Advanced Cluster Security (RHACS) Service Fleet Manager APIs
    that are used by internal services e.g fleetshard operators.
  title: Red Hat Advanced Cluster Security Service Fleet Manager
  version: 1.4.0
servers:
- description: Main (production) server
  url: https://api.openshift.com
- description: Staging server
  url: https://api.stage.openshift.com
- description: localhost
  url: http://localhost:8000
- description: current domain
  url: /
tags:
- name: Agent Clusters
paths:
  /api/rhacs/v1/agent-clusters/{id}/status:
    put:
      operationId: updateAgentClusterStatus
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest'
        description: Cluster status update data
        required: true
      responses:
        "200":
          description: Cluster status is updated
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of an agent cluster
      tags:
      - Agent Clusters
  /api/rhacs/v1/agent-clusters/{id}/centrals/status:
    put:
      operationId: updateCentralClusterStatus
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataPlaneCentralStatusUpdateRequest'
        description: Centrals status update data
        required: true
      responses:
        "200":
          description: Status is updated for Centrals
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Update the status of Centrals on an agent cluster
      tags:
      - Agent Clusters
  /api/rhacs/v1/agent-clusters/{id}/centrals:
    get:
      operationId: getCentrals
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagedCentralList'
          description: The list of the ManagedCentrals for the specified agent cluster
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Get the list of ManagedaCentrals for the specified agent cluster
      tags:
      - Agent Clusters
  /api/rhacs/v1/agent-clusters/{id}:
    get:
      operationId: getDataPlaneClusterAgentConfig
      parameters:
      - description: The ID of record
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataplaneClusterAgentConfig'
          description: The Data Plane Cluster Agent configuration
        "400":
          content:
            application/json:
              examples:
                "400InvalidIdExample":
                  $ref: '#/components/examples/400InvalidIdExample'
              schema:
                $ref: '#/components/schemas/Error'
          description: id value is not valid
        "404":
          content:
            application/json:
              examples:
                "404Example":
                  $ref: '#/components/examples/404Example'
              schema:
                $ref: '#/components/schemas/Error'
          description: Auth token is not valid.
      security:
      - Bearer: []
      summary: Get the data plane cluster agent configuration
      tags:
      - Agent Clusters
components:
  examples:
    ManagedCentralExample:
      value:
        id: a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
        kind: ManagedCentral
        metadata:
          name: example-central
          namespace: example-central-a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
          annotations:
            mas/id: a3a9c5b9-0283-4ff8-9b9e-da2209da17c3
            mas/placementId: ""
          deletionTimestamp: 2022-06-01T11:04:09Z
        spec:
          owners:
          - central-owner1
          auth:
            clientSecret: ""
            clientId: client-id
            clientOrigin: shared_static_rhsso
            ownerUserId: f:ac4bcdb5-1fb1-41c5-9323-349698b9b757:username
            orgId: "13442309"
            issuer: https://sso.stage.redhat.com/auth/realms/redhat-external
          endpoint:
            host: example-central--rfpsqbvq-em-u-u-z--ymjcwac.example.central.com
            tls:
              cert: ""
              key: ""
          versions:
            central: 2.7.0
            centralOperator: 0.21.2
          central:
            resources:
              requests:
                cpu: 250m
                memory: 250Mi
              limtis:
                cpu: 1000m
                memory: 4Gi
          scanner:
            analyzer:
              scaling:
                autoScaling: enabled
                replicas: 1
                minReplicas: 1
                maxReplicas: 3
              resources:
                requests:
                  cpu: 250m
                  memory: 100Mi
                limtis:
                  cpu: 500m
                  memory: 2500Mi
          db:
            host: dbhost.rhacs-psql-instance
    DataPlaneCentralStatusRequestExample:
      value:
        conditions:
        - type: Ready
          reason: CentralInstanceReady
          message: installing
          status: "False"
          lastTransitionTime: 2018-01-01T00:00:00Z
        versions:
          central: 2.4.1
          centralOperator: 0.21.2
    "400InvalidIdExample":
      value:
        id: "21"
        kind: Error
        href: /api/rhacs/v1/errors/21
        code: RHACS-MGMT-21
        reason: Bad request
        operation_id: 1lWDGuybIrEnxrAem724gqkkiDv
    "404Example":
      value:
        id: "7"
        kind: Error
        href: /api/rhacs/v1/errors/7
        code: RHACS-MGMT-7
        reason: The requested resource doesn't exist
  schemas:
    ListReference:
      properties:
        kind:
          type: string
      required:
      - items
      - kind
      type: object
    PrivateObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
      type: object
    ResourceList:
      additionalProperties:
        type: string
      type: object
    ResourceRequirements:
      properties:
        requests:
          additionalProperties:
            type: string
          type: object
        limits:
          additionalProperties:
            type: string
          type: object
      type: object
    ManagedCentralVersions:
      properties:
        central:
          type: string
        centralOperator:
          type: string
      type: object
    ManagedCentral:
      allOf:
      - $ref: '#/components/schemas/PrivateObjectReference'
      - $ref: '#/components/schemas/ManagedCentral_allOf'
    ManagedCentralList:
      allOf:
      - $ref: '#/components/schemas/ListReference'
      - $ref: '#/components/schemas/ManagedCentralList_allOf'
      description: A list of ManagedCentral
    DataPlaneClusterUpdateStatusRequest:
      description: Schema for the request to update a data plane cluster's status
      example:
        conditions:
        - reason: reason
          type: type
          message: message
          status: status
        - reason: reason
          type: type
          message: message
          status: status
        centralOperator:
        - ready: true
          centralVersions:
          - centralVersions
          - centralVersions
          version: version
        - ready: true
          centralVersions:
          - centralVersions
          - centralVersions
          version: version
      properties:
        conditions:
          description: The cluster data plane conditions
          items:
            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'
          type: array
        centralOperator:
          items:
            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_centralOperator'
          type: array
      type: object
    DataPlaneCentralStatus:
      description: Schema of the status object for a Central
      example:
        $ref: '#/components/examples/DataPlaneCentralStatusRequestExample'
      properties:
        conditions:
          description: The status conditions of a Central
          items:
            $ref: '#/components/schemas/DataPlaneClusterUpdateStatusRequest_conditions'
          type: array
        versions:
          $ref: '#/components/schemas/DataPlaneCentralStatus_versions'
        routes:
          description: Routes created for a Central
          items:
            $ref: '#/components/schemas/DataPlaneCentralStatus_routes'
          type: array
      type: object
    DataPlaneCentralStatusUpdateRequest:
      additionalProperties:
        $ref: '#/components/schemas/DataPlaneCentralStatus'
      description: Schema for the request to update the statuses of Central clusters
        from data plane
      type: object
    DataplaneClusterAgentConfig:
      description: Configuration for the data plane cluster agent
      example:
        spec:
          observability:
            channel: channel
            tag: tag
            accessToken: accessToken
            repository: repository
      properties:
        spec:
          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec'
      type: object
    WatchEvent:
      properties:
        type:
          type: string
        error:
          $ref: '#/components/schemas/Error'
        object:
          nullable: true
          type: object
      required:
      - type
      type: object
    Error:
      allOf:
      - $ref: '#/components/schemas/ObjectReference'
      - $ref: '#/components/schemas/Error_allOf'
    ObjectReference:
      properties:
        id:
          type: string
        kind:
          type: string
        href:
          type: string
      type: object
    ManagedCentral_allOf_metadata_annotations:
      properties:
        mas/id:
          type: string
        mas/placementId:
          type: string
      required:
      - mas/id
      - mas/placementId
    ManagedCentral_allOf_metadata:
      properties:
        name:
          type: string
        namespace:
          type: string
        annotations:
          $ref: '#/components/schemas/ManagedCentral_allOf_metadata_annotations'
        deletionTimestamp:
          type: string
    ManagedCentral_allOf_spec_auth:
      properties:
        clientSecret:
          type: string
        clientId:
          type: string
        clientOrigin:
          type: string
        ownerUserId:
          type: string
        ownerOrgId:
          type: string
        issuer:
          type: string
    ManagedCentral_allOf_spec_uiEndpoint_tls:
      properties:
        cert:
          type: string
        key:
          type: string
    ManagedCentral_allOf_spec_uiEndpoint:
      description: Handles GUI/CLI/API connections
      properties:
        host:
          type: string
        tls:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_uiEndpoint_tls'
    ManagedCentral_allOf_spec_dataEndpoint:
      description: Handles Sensor connections
      properties:
        host:
          type: string
    ManagedCentral_allOf_spec_central:
      properties:
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
    ManagedCentral_allOf_spec_scanner_analyzer_scaling:
      properties:
        autoScaling:
          type: string
        replicas:
          format: int32
          minimum: 1
          type: integer
        minReplicas:
          format: int32
          minimum: 1
          type: integer
        maxReplicas:
          format: int32
          minimum: 1
          type: integer
    ManagedCentral_allOf_spec_scanner_analyzer:
      properties:
        scaling:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_scanner_analyzer_scaling'
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
    ManagedCentral_allOf_spec_scanner_db:
      properties:
        host:
          type: string
        resources:
          $ref: '#/components/schemas/ResourceRequirements'
    ManagedCentral_allOf_spec_scanner:
      properties:
        analyzer:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_scanner_analyzer'
        db:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_scanner_db'
    ManagedCentral_allOf_spec:
      properties:
        owners:
          items:
            type: string
          type: array
        auth:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_auth'
        uiEndpoint:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_uiEndpoint'
        dataEndpoint:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_dataEndpoint'
        versions:
          $ref: '#/components/schemas/ManagedCentralVersions'
        central:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_central'
        scanner:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec_scanner'
    ManagedCentral_allOf:
      properties:
        metadata:
          $ref: '#/components/schemas/ManagedCentral_allOf_metadata'
        spec:
          $ref: '#/components/schemas/ManagedCentral_allOf_spec'
        requestStatus:
          type: string
    ManagedCentralList_allOf:
      example: '{"kind":"ManagedCentralList","items":{"$ref":"#/components/examples/ManagedCentralExample"}}'
      properties:
        items:
          items:
            allOf:
            - $ref: '#/components/schemas/ManagedCentral'
          type: array
    DataPlaneClusterUpdateStatusRequest_conditions:
      example:
        reason: reason
        type: type
        message: message
        status: status
      properties:
        type:
          type: string
        reason:
          type: string
        message:
          type: string
        status:
          type: string
    DataPlaneClusterUpdateStatusRequest_centralOperator:
      example:
        ready: true
        centralVersions:
        - centralVersions
        - centralVersions
        version: version
      properties:
        ready:
          type: boolean
        version:
          type: string
        centralVersions:
          items:
            type: string
          type: array
      required:
      - ready
      - version
    DataPlaneCentralStatus_versions:
      description: Version information related to a Central
      properties:
        central:
          type: string
        centralOperator:
          type: string
    DataPlaneCentralStatus_routes:
      properties:
        domain:
          type: string
        router:
          type: string
    DataplaneClusterAgentConfig_spec_observability:
      description: Observability configurations
      example:
        channel: channel
        tag: tag
        accessToken: accessToken
        repository: repository
      properties:
        accessToken:
          nullable: true
          type: string
        channel:
          type: string
        repository:
          type: string
        tag:
          type: string
    DataplaneClusterAgentConfig_spec:
      description: Data plane cluster agent spec
      example:
        observability:
          channel: channel
          tag: tag
          accessToken: accessToken
          repository: repository
      properties:
        observability:
          $ref: '#/components/schemas/DataplaneClusterAgentConfig_spec_observability'
    Error_allOf:
      properties:
        code:
          type: string
        reason:
          type: string
        operation_id:
          type: string
  securitySchemes:
    Bearer:
      bearerFormat: JWT
      scheme: bearer
      type: http
